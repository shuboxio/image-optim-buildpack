#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

BUILD_DIR=$1
CACHE_DIR=$2
BIN_DIR=$(cd $(dirname $0); pwd)
ROOT_DIR=$(dirname $BIN_DIR)
WORKING_DIR=$(pwd)
VENDOR_DIR="vendor/image-optim"
TMP_DIR="${BUILD_DIR}/tmp"
GIFSICLE_VERSION=1.91

indent() {
  sed -u 's/^/       /'
}

echo "-----> Adding Item-Optim binaries"

cd $ROOT_DIR/${VENDOR_DIR}

mkdir -p ${BUILD_DIR}/${VENDOR_DIR}

cp -v * ${BUILD_DIR}/${VENDOR_DIR} | indent

dpkg -l |grep libjpeg62 > /dev/null
if [ $? -eq 0 ]
then
  cp -v jpegoptim/jpegoptim-cedar ${BUILD_DIR}/${VENDOR_DIR}/jpegoptim | indent
else
  cp -v jpegoptim/jpegoptim-cedar14 ${BUILD_DIR}/${VENDOR_DIR}/jpegoptim | indent
fi

echo "-----> Compiling gifsicle $GIFSICLE_VERSION"

GIFSICLE_FILE=v$GIFSICLE_VERSION.tar.gz
GIFSICLE_URL=https://github.com/kohler/gifsicle/archive/$GIFSICLE_FILE
GIFSICLE_DIR=gifsicle-$GIFSICLE_VERSION

mkdir -p $TMP_DIR

cd $TMP_DIR

curl -O -L -C - $GIFSICLE_URL

tar -xzf $GIFSICLE_FILE

cd $GIFSICLE_DIR

autoreconf -i && ./configure && make

mv ./src/gifsicle ${BUILD_DIR}/${VENDOR_DIR}/gifsicle

echo "-----> Adding image-optim and openjpeg binaries symlinks to make available to next buildpacks"

export PATH="$PATH:$HOME/vendor/image-optim"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/vendor/image-optim"

cd $WORKING_DIR

cd /tmp/codon/vendor/bin

ln -s ${BUILD_DIR}/${VENDOR_DIR}/cwebp cwebp
ln -s ${BUILD_DIR}/${VENDOR_DIR}/dwebp dwebp
ln -s ${BUILD_DIR}/${VENDOR_DIR}/advpng advpng
ln -s ${BUILD_DIR}/${VENDOR_DIR}/gifsicle gifsicle
ln -s ${BUILD_DIR}/${VENDOR_DIR}/jpegoptim jpegoptim
ln -s ${BUILD_DIR}/${VENDOR_DIR}/jpegtran jpegtran
ln -s ${BUILD_DIR}/${VENDOR_DIR}/optipng optipng
ln -s ${BUILD_DIR}/${VENDOR_DIR}/pngcrush pngcrush
ln -s ${BUILD_DIR}/${VENDOR_DIR}/pngquant pngquant
ln -s ${BUILD_DIR}/${VENDOR_DIR}/pngout pngout

ln -s ${BUILD_DIR}/${VENDOR_DIR}/libopenjp2.so libopenjp2.so
ln -s ${BUILD_DIR}/${VENDOR_DIR}/libopenjp2.so.7 libopenjp2.so.7
ln -s ${BUILD_DIR}/${VENDOR_DIR}/libopenjp2.so.2.3.0 libopenjp2.so.2.3.0
ln -s ${BUILD_DIR}/${VENDOR_DIR}/libopenjp2.a libopenjp2.a
ln -s ${BUILD_DIR}/${VENDOR_DIR}/opj_compress opj_compress
ln -s ${BUILD_DIR}/${VENDOR_DIR}/opj_decompress opj_decompress
ln -s ${BUILD_DIR}/${VENDOR_DIR}/opj_dump opj_dump


echo "-----> Adding image-optim binaries to PATH"

cd $ROOT_DIR/profile.d

mkdir -p ${BUILD_DIR}/.profile.d

cp -v * ${BUILD_DIR}/.profile.d/ | indent

if [ -f ${BUILD_DIR}/Gemfile ]; then
    echo "-----> Gemfile detected, adding image-optim config file"

    cd ${ROOT_DIR}/config

    cp -v image_optim.yml ${BUILD_DIR}/.image_optim.yml
fi

cd $WORKING_DIR

echo "-----> Image-Optim binaries version"

echo "cwebp version: `cwebp -version`" | head -1 | indent

echo "dwebp version: `dwebp -version`" | head -1 | indent

advpng -V | head -1 | indent

gifsicle --version | head -1 | indent

jpegoptim -V | head -1 | indent

jpegtran -V /dev/null 2>&1 | head -1 | indent

optipng -V | head -1 | indent

pngcrush -version 2>&1 | head -1 | indent

pngquant 2>&1 | head -1 | indent

pngout 2>&1 | head -1 | indent

opj_compress 2>&1 | head -1 | indent

cd $WORKING_DIR
